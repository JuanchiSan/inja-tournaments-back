@page "/Login"
@using Microsoft.EntityFrameworkCore
@using InjaAdmin.Auth
@using Helper = InjaData.Helper

@inject SfDialogService dialogService
@inject AuthenticationStateProvider authStateProvider
@inject NavigationManager navManager

<div class="row">
  <div class="col-lg-4 offset-lg-4 pb-4 border">
    <div class="mb-3 text-center">
      <h3>Login</h3>
    </div>
    <div class="mb-3">
      <label>User Mail</label>
      <input @bind="_model.UserName" class="form-control" placeholder="User Mail"/>
    </div>
    <div class="mb-3">
      <label>Password</label>
      <input @bind="_model.Password" type="password" class="form-control" placeholder="Password"/>
    </div>
    <div class="mb-3 d-grid gap-2">
      <button @onclick="OnLoginClick" class="btn btn-primary">Login</button>
    </div>
  </div>
</div>

@code {
  readonly Model _model = new();

  public class Model
  {
    public string UserName { get; set; } = string.Empty;
    public string Password { get; set; } = string.Empty;
  }

  protected override void OnInitialized()
  {
    _model.UserName = string.Empty;
    _model.Password = string.Empty;
    if (InjaAdmin.Helper.Environment != "Dev") return;
    _model.UserName = "guadcore@gmail.com";
    _model.Password = "Pepe.1234";
  }

  private async Task OnLoginClick(MouseEventArgs obj)
  {
    var dbUsers = await new dbContext().Injausers.ToListAsync();
    var dbUser = dbUsers.FirstOrDefault(x =>
      string.Equals(x.Mail, _model.UserName, StringComparison.InvariantCultureIgnoreCase) &&
      string.Equals(x.Pass, _model.Password, StringComparison.CurrentCulture));

    if (dbUser == null)
    {
      await dialogService.AlertAsync("User Not Found or Password is Wrong", "Login Failed");
      return;
    }

    var customAuthStateProvider = (CustomAuthStateProvider)authStateProvider;
    await customAuthStateProvider.UpdateAuthenticationState(new UserSession
    {
      Name = dbUser.Name!,
      UserName = dbUser.Mail!,
      Role = dbUser.Adminusertype.ToString()
    });
    navManager.NavigateTo("/", true);
  }

}