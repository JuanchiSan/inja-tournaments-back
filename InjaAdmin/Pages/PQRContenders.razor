@page "/QRContenders"

@using Syncfusion.Blazor.BarcodeGenerator
@using QRCoder
@using System.Drawing.Imaging

@inject IJSRuntime JsRuntime
@inject NavigationManager navManager

<h3 class="print-hide">Contenders</h3>

<div>
  <div class="print-hide">
    <span>Event</span>
    <SfComboBox href="@sfComboEvent" @bind-Value="@(_eventId)" TValue="int?" TItem="Event"
                Width="350" PopupWidth="350" DataSource="@(_lstEvents)">
      <ComboBoxFieldSettings Text="@nameof(Event.Name)" Value="@nameof(Event.Id)"/>
      <ComboBoxEvents TValue="int?" TItem="Event" ValueChange="@OnEventValueChange"/>
    </SfComboBox>
  </div>
  <div class="section">
    <h2 class="print-hide section-title">QR List</h2> <p class="print-hide helper">(Press Ctrl+P to print the complete listing)</p>
  </div>
  <div class="user-list">
    @{
      if (_lstUsers != null && _lstUsers.Count > 0)
      {
        foreach (var user in _lstUsers)
        {
          var strFinal = $"https://inja-apo.guadcore.ar/qr-handler?eventId={user.Eventid}&challengeId={user.Challengeid}&divisionId={user.Divisionid}&contenderId={user.Userid}"; 
          <div class="user-data">
            <div class="user-challenge">@user.Eventchallengename</div>
            <div class="user-division">@user.Divisionname</div>
            <div class="user-qr">
              <SfQRCodeGenerator Width="150px" Height="150px" Value="@(strFinal)">
                <QRCodeGeneratorDisplayText Text="@user.Usernumber"/>
              </SfQRCodeGenerator>
            </div>
          </div>
        }
      }
      else
      {
        <p>No items for the selected event.</p>
      }
    }
  </div>
</div>

<style>
  .user-list {
    display: flex;
    flex-direction: row;
    flex-wrap: wrap;
  }
  .user-data {
    flex-direction: column;
    display: flex;
    align-items: center;
  }
  .user-division {
    z-index: 10;
  }
  .user-qr {
    top: -14px;
    position: relative;
    z-index: 1;
  }
  .section-title {
    font-size: 1.3em;
  }
  .section {
    display: flex;
    flex-direction: row;
    align-items: baseline;
    margin-top: 1em;
  }
  .helper {
    font-size: .8em;
    margin-left: 1em;
  }
  
</style>

@code {
  List<VUserinscriptionPlana>? _lstUsers { get; set; }
  List<Event>? _lstEvents { get; set; }

  private void FillDataSources()
  {
    if (_eventId != null)
      _lstUsers = Helper.DB
        .VUserinscriptionPlanas.Where(x => x.Eventid == _eventId).ToList();
  }

  protected override void OnInitialized()
  {
    _lstEvents = Helper.DB.Events.ToList();
    if (_lstEvents is {Count: > 0 })
      _eventId = _lstEvents.FirstOrDefault()?.Id;
    
    FillDataSources();
    StateHasChanged();
  }

  #region ComboBox


  int? _eventId { get; set; }
  SfComboBox<int?, Event>? sfComboEvent { get; set; }

  private void OnEventValueChange(ChangeEventArgs<int?, Event> args)
  {
    FillDataSources();
    StateHasChanged();
  }

  #endregion

}