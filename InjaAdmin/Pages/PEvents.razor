@page "/Events"

@attribute [Authorize(Roles = "4,5")]
<div>
  <h2>Events</h2>
</div>

<div>
  <SfGrid @ref="@DataGrid" TValue="Event" ID="@nameof(DataGrid)"
          AllowFiltering="true" AllowReordering="true" AllowResizing="true" AllowExcelExport="true" AllowPdfExport="true" AllowSorting="true"
          Toolbar="@(new List<string> { "Add", "Edit", "Delete", "Cancel", "Update", "ExcelExport", "PdfExport", "CsvExport" })">
    <GridEditSettings AllowAdding="true" AllowEditing="true" AllowDeleting="true" Mode="EditMode.Normal"></GridEditSettings>
    <GridFilterSettings Type="Syncfusion.Blazor.Grids.FilterType.Excel"/>
    <SfDataManager AdaptorInstance="@typeof(EventAdaptor)" Adaptor="Adaptors.CustomAdaptor"/>
    <GridEvents OnActionBegin="OnGridEventActionBegin" OnToolbarClick="@GridToolbarClick" TValue="Event"/>
    <GridSortSettings>
    <GridSortColumns>
      <GridSortColumn Field="@nameof(Event.Name)" Direction="SortDirection.Ascending"/>
    </GridSortColumns>
    </GridSortSettings>
    <GridColumns>
      <GridColumn Field="@nameof(Event.Id)" HeaderText="Id" AllowEditing="false" AllowAdding="false" IsIdentity="true" IsPrimaryKey="true" Width="150"/>
      <GridColumn Field="@nameof(Event.Name)" HeaderText="Name" Width="150"/>
      <GridColumn Field="@nameof(Event.Startdate)" HeaderText="Start Date" EditType="EditType.DateTimePickerEdit" Width="150"/>
      <GridColumn Field="@nameof(Event.Enddate)" HeaderText="End Date" EditType="EditType.DateTimePickerEdit" Width="150"/>
      <GridColumn Field="@nameof(Event.Startinscription)" HeaderText="Start Inscription" EditType="EditType.DateTimePickerEdit" Width="150"/>
      <GridColumn Field="@nameof(Event.Endinscription)" HeaderText="End Inscription" EditType="EditType.DateTimePickerEdit" Width="150"/>
      <GridColumn Field="@nameof(Event.Comment)" HeaderText="Comment" Width="150"/>
      <GridColumn Field="@nameof(Event.Active)" HeaderText="Active" DisplayAsCheckBox="true" Width="150"/>
    </GridColumns>
  </SfGrid>
</div>


@code {
  SfGrid<Event>? DataGrid { get; set; }

  private async Task GridToolbarClick(ClickEventArgs args)
  {
    if (DataGrid == null) return;
    switch (args.Item.Id)
    {
      case $"{nameof(DataGrid)}_excelexport":
        await DataGrid.ExportToExcelAsync();
        break;
      case $"{nameof(DataGrid)}_pdfexport":
        await DataGrid.ExportToPdfAsync();
        break;
      case $"{nameof(DataGrid)}_csvexport":
        await DataGrid.ExportToCsvAsync();
        break;
    }
  }

  private void OnGridEventActionBegin(ActionEventArgs<Event> obj)
  {
    switch (obj.RequestType)
    {
      case Syncfusion.Blazor.Grids.Action.Add:
        obj.RowData.Startdate = DateTime.Today;
        obj.RowData.Enddate = DateTime.Today;
        obj.RowData.Startinscription = DateTime.Today;
        obj.RowData.Endinscription = DateTime.Today;
        obj.RowData.Active = true;
        break;
    }
  }

}