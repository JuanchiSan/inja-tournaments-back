@page "/Events"

@using Syncfusion.Blazor;
@using Syncfusion.Blazor.Data;
@using Syncfusion.Blazor.Grids;
@using InjaData.Models;
@using InjaAdmin.Adaptors;

<div>
	<SfGrid @ref="@DataGrid" TValue="Event" ID="@nameof(DataGrid)" 
		AllowFiltering="true" AllowReordering="true" AllowResizing="true" AllowExcelExport="true" AllowPdfExport="true" AllowSorting="true" 
		Toolbar="@(new List<string>() {"Add", "Edit", "Delete", "Cancel", "Update","ExcelExport","PdfExport","CsvExport"})">
		<GridEditSettings AllowAdding="true" AllowEditing="true" AllowDeleting="true" Mode="Syncfusion.Blazor.Grids.EditMode.Normal"></GridEditSettings>
		<GridFilterSettings Type="Syncfusion.Blazor.Grids.FilterType.Excel"/>
		<SfDataManager AdaptorInstance="@typeof(EventAdaptor)" Adaptor="Adaptors.CustomAdaptor"/>
		<GridEvents OnToolbarClick="@GridToolbarClick" TValue="Event"/>
		<GridColumns>
			<GridColumn Field="@nameof(Event.Id)" HeaderText="Id" AllowEditing="false" IsPrimaryKey="true" Width="150"/>
			<GridColumn Field="@nameof(Event.Name)" HeaderText="Name" Width="150"/>
			<GridColumn Field="@nameof(Event.Creatoruserid)" HeaderText="Creatoruserid" Width="150"/>
			<GridColumn Field="@nameof(Event.Startdate)" HeaderText="Startdate" EditType="EditType.DateTimePickerEdit" Width="150"/>
			<GridColumn Field="@nameof(Event.Enddate)" HeaderText="Enddate" EditType="EditType.DateTimePickerEdit" Width="150"/>
			<GridColumn Field="@nameof(Event.Startinscription)" HeaderText="Startinscription" EditType="EditType.DateTimePickerEdit" Width="150"/>
			<GridColumn Field="@nameof(Event.Endinscription)" HeaderText="Endinscription" EditType="EditType.DateTimePickerEdit" Width="150"/>
			<GridColumn Field="@nameof(Event.Comment)" HeaderText="Comment" Width="150" />
			<GridColumn Field="@nameof(Event.Active)" HeaderText="Active" DisplayAsCheckBox="true" Width="150" />
		</GridColumns>
	</SfGrid>
</div>


@code {
	SfGrid<Event>? DataGrid { get; set; }

	public async Task GridToolbarClick(Syncfusion.Blazor.Navigations.ClickEventArgs args)
	{
		if (DataGrid == null) return;
		if (args.Item.Id == $"{nameof(DataGrid)}_excelexport")
		{
			await DataGrid.ExportToExcelAsync();
		}
		if (args.Item.Id == $"{nameof(DataGrid)}_pdfexport")
		{
			await this.DataGrid.ExportToPdfAsync();
		}
		if (args.Item.Id == $"{nameof(DataGrid)}_csvexport")
		{
			await this.DataGrid.ExportToCsvAsync();
		}
	}

}
