@page "/Types"

<h3>Types of Documents</h3>

<div>
  <div>
    <SfGrid @ref="@DocTypeGrid" TValue="Doctype" ID="DocTypeGrid"
            AllowFiltering="true" AllowReordering="true" AllowResizing="true" AllowSorting="true"
            AllowPdfExport="true" AllowExcelExport="true"
            Toolbar="@(new List<string> { "Add", "Edit", "Delete", "Cancel", "Update", "ExcelExport", "PdfExport", "CsvExport" })">
      <GridEditSettings AllowAdding="true" AllowEditing="true" AllowDeleting="true" Mode="EditMode.Normal"/>
      <GridFilterSettings Type="Syncfusion.Blazor.Grids.FilterType.Excel"/>
      <SfDataManager AdaptorInstance="@typeof(DocTypeAdaptor)" Adaptor="Adaptors.CustomAdaptor"/>
      <GridEvents OnToolbarClick="@DocTypeGridToolbarClick" TValue="Doctype"/>
      <GridSortSettings>
        <GridSortColumns>
          <GridSortColumn Field="@nameof(Doctype.Name)" Direction="SortDirection.Ascending"/>
        </GridSortColumns>
      </GridSortSettings>
      <GridColumns>
        <GridColumn Field="@nameof(Doctype.Id)" HeaderText="Id" AllowEditing="false" IsPrimaryKey="true" Width="150"></GridColumn>
        <GridColumn Field="@nameof(Doctype.Name)" HeaderText="Name" Width="150"/>
        <GridColumn Field="@nameof(Doctype.Active)" HeaderText="Active" DisplayAsCheckBox="true" Width="150"/>
      </GridColumns>
    </SfGrid>
  </div>
  <br/>
  <h3>Users</h3>
  <div>
    <SfGrid @ref="@UserTypeGrid" TValue="Usertype" ID="UserTypeGrid"
            AllowFiltering="true" AllowReordering="true" AllowResizing="true"
            AllowExcelExport="true" AllowPdfExport="true" AllowSorting="true"
            Toolbar="@(new List<string> { "Add", "Edit", "Delete", "Cancel", "Update", "ExcelExport", "PdfExport", "CsvExport" })">
      <GridEditSettings AllowAdding="true" AllowEditing="true" AllowDeleting="true" Mode="EditMode.Normal"/>
      <GridFilterSettings Type="Syncfusion.Blazor.Grids.FilterType.Excel"/>
      <SfDataManager AdaptorInstance="@typeof(UserTypeAdaptor)" Adaptor="Adaptors.CustomAdaptor"/>
      <GridEvents OnToolbarClick="@UserTypeGridToolbarClick" TValue="Usertype"/>
      <GridSortSettings>
      <GridSortColumns>
        <GridSortColumn Field="@nameof(Usertype.Name)" Direction="SortDirection.Ascending"/>
      </GridSortColumns>
      </GridSortSettings>
      <GridColumns>
        <GridColumn Field="@nameof(Usertype.Id)" HeaderText="Id" AllowEditing="false" IsPrimaryKey="true" Width="150"/>
        <GridColumn Field="@nameof(Usertype.Name)" HeaderText="Name" Width="150"/>
        <GridColumn Field="@nameof(Usertype.Active)" HeaderText="Active" DisplayAsCheckBox="true" Width="150"/>
      </GridColumns>
    </SfGrid>
  </div>
</div>

@code {

  SfGrid<Usertype>? UserTypeGrid { get; set; }

  /// <summary>
  /// Event for Toolbar click for Grid Exporting
  /// </summary>
  private async Task UserTypeGridToolbarClick(Syncfusion.Blazor.Navigations.ClickEventArgs args)
  {
    if (UserTypeGrid == null) return;

    switch (args.Item.Id)
    {
      case $"{nameof(UserTypeGrid)}_excelexport":
        await UserTypeGrid.ExportToExcelAsync();
        break;
      case $"{nameof(UserTypeGrid)}_pdfexport":
        await UserTypeGrid.ExportToPdfAsync();
        break;
      case $"{nameof(UserTypeGrid)}_csvexport":
        await UserTypeGrid.ExportToCsvAsync();
        break;
    }
  }

  SfGrid<Doctype>? DocTypeGrid { get; set; }

  /// <summary>
  /// Event for Toolbar click for Grid Exporting
  /// </summary>
  private async Task DocTypeGridToolbarClick(Syncfusion.Blazor.Navigations.ClickEventArgs args)
  {
    if (DocTypeGrid == null) return;

    switch (args.Item.Id)
    {
      case $"{nameof(DocTypeGrid)}_excelexport":
        await DocTypeGrid.ExportToExcelAsync();
        break;
      case $"{nameof(DocTypeGrid)}_pdfexport":
        await DocTypeGrid.ExportToPdfAsync();
        break;
      case $"{nameof(DocTypeGrid)}_csvexport":
        await DocTypeGrid.ExportToCsvAsync();
        break;
    }
  }

}