@page "/Challenge"

<h3>Challenge</h3>

<div>
	<SfGrid @ref="@DataGrid" TValue="Challengetype" ID="@nameof(DataGrid)"
					AllowPaging="true" AllowFiltering="true" AllowReordering="true" AllowResizing="true" AllowExcelExport="true" AllowPdfExport="true" AllowSorting="true"
					Toolbar="@(new List<string>() {"Add", "Edit", "Delete", "Cancel", "Update","ExcelExport","PdfExport","CsvExport"})">
		<GridEditSettings AllowAdding="true" AllowEditing="true" AllowDeleting="true" Mode="EditMode.Normal"/>
		<GridFilterSettings Type="Syncfusion.Blazor.Grids.FilterType.Excel"/>
		<GridPageSettings PageSize="100" PageSizes="true"/>
		<SfDataManager AdaptorInstance="@typeof(ChallengeAdaptor)" Adaptor="Adaptors.CustomAdaptor"/>
		<GridEvents OnToolbarClick="@GridToolbarClick" TValue="Challengetype"/>
		<GridColumns>
			<GridColumn Field="@nameof(Challengetype.Id)" HeaderText="Id" Visible="false" AllowEditing="false" IsPrimaryKey="true" IsIdentity="true" Width="150"/>
			<GridColumn Field="@nameof(Challengetype.Name)" HeaderText="Name" Width="150"/>
			<GridColumn Field="@nameof(Challengetype.Comment)" HeaderText="Comment" Width="250"/>
			<GridColumn Field="@nameof(Challengetype.Isforteam)" HeaderText="Team" DisplayAsCheckBox="true" Width="70"/>
			<GridColumn Field="@nameof(Challengetype.Active)" HeaderText="Active" DisplayAsCheckBox="true" Width="70"/>
		</GridColumns>
	</SfGrid>
</div>


@code {
	SfGrid<Challengetype>? DataGrid { get; set; }

	private async Task GridToolbarClick(ClickEventArgs args)
	{
		if (DataGrid == null) return;
		switch (args.Item.Id)
		{
			case $"{nameof(DataGrid)}_excelexport":
				await DataGrid.ExportToExcelAsync();
				break;
			case $"{nameof(DataGrid)}_pdfexport":
				await DataGrid.ExportToPdfAsync();
				break;
			case $"{nameof(DataGrid)}_csvexport":
				await DataGrid.ExportToCsvAsync();
				break;
		}
	}
}
